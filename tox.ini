[tox]
envlist = py311, py312, coverage-report, lint, type-check
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps = 
    pytest>=8.4
    pytest-asyncio>=0.25
    pytest-cov>=6.0
    coverage[toml]>=7.0
commands = 
    pytest {posargs}

[testenv:coverage-report]
deps = coverage[toml]>=7.0
skip_install = true
commands =
    coverage combine
    coverage report
    coverage html

#[testenv:lint]
#deps = 
#    flake8>=5.0
#    black>=22.0
#commands = 
#    flake8 raftengine/ tests/
#    black --check raftengine/ tests/

#[testenv:format]
#deps = 
#    black>=22.0
#commands = 
#    black raftengine/ tests/

#[testenv:type-check]
#deps = 
#    mypy>=1.0
#    types-setuptools
#commands = 
#    mypy raftengine/

[testenv:docs]
deps = 
     sphinx>=4.5.0
     sphinx-rtd-theme>=1.0.0
     sphinxcontrib-plantuml>=0.30
     graphviz>=0.20.3
     sphinx-autodoc2>=0.5.0
     sphinx-autoapi==3.6.0
     pillow==11.2.1
     sphinx_collapse==0.1.3
     sphinx-debuginfo==0.2.2.post1
commands = 
    sphinx-build -b html docs/source docs/build/html

[testenv:build]
deps = 
    build>=0.8
    wheel>=0.37
commands = 
    python -m build

[testenv:clean]
deps = 
skip_install = true
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"

# Configuration for flake8
#[flake8]
#max-line-length = 88
#extend-ignore = E203, W503
#exclude = 
#    .git,
#    __pycache__,
#    .tox,
#    .venv,
#    venv,
#    build,
#    dist,
#    demos,
    dev_tools,
#    docs,
#    htmlcov
#
# Configuration for coverage
[coverage:run]
source = raftengine
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*
    demos/*
    dev_tools/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov