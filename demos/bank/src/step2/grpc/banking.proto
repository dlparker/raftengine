syntax = "proto3";

package banking;

service BankingService {
  rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse);
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc Deposit(DepositRequest) returns (DepositResponse);
  rpc Withdraw(WithdrawRequest) returns (WithdrawResponse);
  rpc Transfer(TransferRequest) returns (TransferResponse);
  rpc CashCheck(CashCheckRequest) returns (CashCheckResponse);
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
  rpc GetAccounts(GetAccountsRequest) returns (GetAccountsResponse);
  rpc ListStatements(ListStatementsRequest) returns (ListStatementsResponse);
  rpc AdvanceTime(AdvanceTimeRequest) returns (AdvanceTimeResponse);
}

// Request/Response messages
message CreateCustomerRequest {
  string first_name = 1;
  string last_name = 2;
  string address = 3;
}

message CreateCustomerResponse {
  bytes customer_data = 1;  // msgpack serialized Customer object
}

message CreateAccountRequest {
  string customer_id = 1;
  string account_type = 2;  // AccountType enum value
}

message CreateAccountResponse {
  bytes account_data = 1;  // msgpack serialized Account object
}

message DepositRequest {
  int32 account_id = 1;
  bytes amount = 2;  // msgpack serialized Decimal
}

message DepositResponse {
  bytes balance = 1;  // msgpack serialized Decimal
}

message WithdrawRequest {
  int32 account_id = 1;
  bytes amount = 2;  // msgpack serialized Decimal
}

message WithdrawResponse {
  bytes balance = 1;  // msgpack serialized Decimal
}

message TransferRequest {
  int32 from_account_id = 1;
  int32 to_account_id = 2;
  bytes amount = 3;  // msgpack serialized Decimal
}

message TransferResponse {
  bytes result = 1;  // msgpack serialized Optional[Dict[str, Decimal]]
}

message CashCheckRequest {
  int32 account_id = 1;
  bytes amount = 2;  // msgpack serialized Decimal
}

message CashCheckResponse {
  bytes balance = 1;  // msgpack serialized Decimal
}

message ListAccountsRequest {
  // Empty request
}

message ListAccountsResponse {
  bytes accounts = 1;  // msgpack serialized List[Account]
}

message GetAccountsRequest {
  string customer_id = 1;
}

message GetAccountsResponse {
  bytes account_ids = 1;  // msgpack serialized List[int]
}

message ListStatementsRequest {
  int32 account_id = 1;
}

message ListStatementsResponse {
  bytes dates = 1;  // msgpack serialized List[date]
}

message AdvanceTimeRequest {
  bytes delta_time = 1;  // msgpack serialized timedelta
}

message AdvanceTimeResponse {
  // Empty response
}