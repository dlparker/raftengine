* Test test_reelection_3 from file tests/test_elections_1.py


    This test ensures that elections resolve properly when all the nodes in the cluster
    are candidates and must apply the Raft logic for determining a winner. This involves
    the randomness of the election timeout principle.
    
    This test uses a mix of directly controlling nodes using the testing control system
    and normal timeout driven functions.

    The election timeout range for each node is set to values tuned to the desired result.
    The election timeout is a random value within a range, so to ensure that each node
    experiences the timeout in a specific order, the timeout ranges must not overlap.

    In this test the goal is to ensure that a specific node is elected leader,so
    that node gets a timeout range that is a couple of orders of magnitude (approximately)
    shorter than the other two nodes.

    During the first election, the timeouts are arranged to favor node 3. 
    Once the timeout configuration is complete, the network simulation is triggered to
    deliver messages until any one node reports that it is the leader and it must
    be node 3.
    
    Next the timeouts are adjusted to ensure that node 2 will win another election.
    Node 3 is demoted to follower. Then all three nodes are directed to start an election.
    The network simulation is triggered to deliver messages until any one node reports
    that it is the leader and it must be node 2.

    This second part with the reelection is the meat of the test, because the arrangement
    of actions will cause all three nodes to send out request vote messages, resulting
    in a split vote. So they have to walk through the steps of increasing the term and trying again.

    The Raft paper specifies that the candidate will wait for a timeout in the
    case of split votes, what we have here. This is important to prevent such
    votes from repeating indefinitely.

    


 *[[condensed Trace Table Legend][Table legend]] located after last table in file*

** Starting cluster with election timeout timers active, biased for node 3 to win
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                          | N-1       | N-2   | N-2                          | N-2       | N-3   | N-3                          | N-3       |
|  Role  | Op                           | Delta     | Role  | Op                           | Delta     | Role  | Op                           | Delta     |
|  FLWR  | STARTED                      |           | FLWR  | STARTED                      |           | FLWR  | STARTED                      |           |
|  FLWR  |                              |           | FLWR  |                              |           | CNDI  | poll->N-1 t=1 li=0 lt=1      | t=1       |
|  FLWR  | N-3->poll t=1 li=0 lt=1      |           | FLWR  |                              |           | CNDI  |                              |           |
|  FLWR  | vote->N-3 yes=True           | t=1       | FLWR  |                              |           | CNDI  |                              |           |
|  FLWR  |                              |           | FLWR  |                              |           | CNDI  | N-1->vote yes=True           |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | NEW ROLE                     | lt=1 li=1 |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | poll->N-2 t=1 li=0 lt=1      |           |
|  FLWR  |                              |           | FLWR  | N-3->poll t=1 li=0 lt=1      |           | LEAD  |                              |           |
|  FLWR  |                              |           | FLWR  | vote->N-3 yes=True           | t=1       | LEAD  |                              |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | N-2->vote yes=True           |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | ae->N-1 t=1 i=0 lt=0 e=1 c=0 |           |
|  FLWR  | N-3->ae t=1 i=0 lt=0 e=1 c=0 |           | FLWR  |                              |           | LEAD  |                              |           |
|  FLWR  | ae_reply->N-3 ok=True mi=1   | lt=1 li=1 | FLWR  |                              |           | LEAD  |                              |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | N-1->ae_reply ok=True mi=1   |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | ae->N-2 t=1 i=0 lt=0 e=1 c=0 | ci=1      |
|  FLWR  |                              |           | FLWR  | N-3->ae t=1 i=0 lt=0 e=1 c=0 |           | LEAD  |                              |           |
|  FLWR  |                              |           | FLWR  | ae_reply->N-3 ok=True mi=1   | lt=1 li=1 | LEAD  |                              |           |
|  FLWR  |                              |           | FLWR  |                              |           | LEAD  | N-2->ae_reply ok=True mi=1   |           |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
** Election complete, node 3 won as expected, setting up re-election to have node 2 win
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                          | N-1       | N-2   | N-2                          | N-2       | N-3   | N-3                          | N-3       |
|  Role  | Op                           | Delta     | Role  | Op                           | Delta     | Role  | Op                           | Delta     |
|  FLWR  |                              |           | FLWR  |                              |           | FLWR  | NEW ROLE                     |           |
|  FLWR  |                              |           | FLWR  |                              |           | CNDI  | NEW ROLE                     | t=2       |
|  CNDI  | NEW ROLE                     | t=2       | FLWR  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | NEW ROLE                     | t=2       | CNDI  |                              |           |
|  CNDI  | poll->N-2 t=2 li=1 lt=2      |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | N-1->poll t=2 li=1 lt=2      |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | poll->N-1 t=2 li=1 lt=2      |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | poll->N-1 t=2 li=1 lt=2      |           |
|  CNDI  | N-2->poll t=2 li=1 lt=2      |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  | poll->N-3 t=2 li=1 lt=2      |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | poll->N-3 t=2 li=1 lt=2      |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | N-1->poll t=2 li=1 lt=2      |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | poll->N-2 t=2 li=1 lt=2      |           |
|  CNDI  | N-3->poll t=2 li=1 lt=2      |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  | vote->N-2 yes=False          |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | N-3->poll t=2 li=1 lt=2      |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | vote->N-1 yes=False          |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | N-2->poll t=2 li=1 lt=2      |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | vote->N-1 yes=False          |           |
|  CNDI  | N-2->vote yes=False          |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  | vote->N-3 yes=False          |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | N-1->vote yes=False          |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | vote->N-3 yes=False          |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | N-1->vote yes=False          |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | vote->N-2 yes=False          |           |
|  CNDI  | N-3->vote yes=False          |           | CNDI  |                              |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  | N-3->vote yes=False          |           | CNDI  |                              |           |
|  CNDI  |                              |           | CNDI  |                              |           | CNDI  | N-2->vote yes=False          |           |
|  CNDI  |                              |           | CNDI  | poll->N-1 t=3 li=1 lt=3      | t=3       | CNDI  |                              |           |
|  CNDI  | N-2->poll t=3 li=1 lt=3      |           | CNDI  |                              |           | CNDI  |                              |           |
|  FLWR  | NEW ROLE                     | t=3       | CNDI  |                              |           | CNDI  |                              |           |
|  FLWR  | vote->N-2 yes=False          |           | CNDI  |                              |           | CNDI  |                              |           |
|  FLWR  |                              |           | CNDI  | N-1->vote yes=False          |           | CNDI  |                              |           |
|  FLWR  |                              |           | CNDI  | poll->N-3 t=3 li=1 lt=3      |           | CNDI  |                              |           |
|  FLWR  |                              |           | CNDI  |                              |           | CNDI  | N-2->poll t=3 li=1 lt=3      |           |
|  FLWR  |                              |           | CNDI  |                              |           | FLWR  | NEW ROLE                     | t=3       |
|  FLWR  |                              |           | CNDI  |                              |           | FLWR  | vote->N-2 yes=True           |           |
|  FLWR  |                              |           | CNDI  | N-3->vote yes=True           |           | FLWR  |                              |           |
|  FLWR  |                              |           | LEAD  | NEW ROLE                     | lt=3 li=2 | FLWR  |                              |           |
|  FLWR  |                              |           | LEAD  | ae->N-1 t=3 i=1 lt=1 e=1 c=0 |           | FLWR  |                              |           |
|  FLWR  | N-2->ae t=3 i=1 lt=1 e=1 c=0 |           | LEAD  |                              |           | FLWR  |                              |           |
|  FLWR  | ae_reply->N-2 ok=True mi=2   | lt=3 li=2 | LEAD  |                              |           | FLWR  |                              |           |
|  FLWR  |                              |           | LEAD  | N-1->ae_reply ok=True mi=2   |           | FLWR  |                              |           |
|  FLWR  |                              |           | LEAD  | ae->N-3 t=3 i=1 lt=1 e=1 c=0 | ci=2      | FLWR  |                              |           |
|  FLWR  |                              |           | LEAD  |                              |           | FLWR  | N-2->ae t=3 i=1 lt=1 e=1 c=0 |           |
|  FLWR  |                              |           | LEAD  |                              |           | FLWR  | ae_reply->N-2 ok=True mi=2   | lt=3 li=2 |
|  FLWR  |                              |           | LEAD  | N-3->ae_reply ok=True mi=2   |           | FLWR  |                              |           |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


* Condensed Trace Table Legend
All the items in these legends labeled N-X are placeholders for actual node id values,
actual values will be N-1, N-2, N-3, etc. up to the number of nodes in the cluster. Yes, One based, not zero.

| Column Label | Description     | Details                                                                                        |
| N-X Role     | Raft Role       | FLWR = Follower CNDI = Candidate LEAD = Leader                                                 |
| N-X Op       | Activity        | Describes a traceable event at this node, see separate table below                             |
| N-X Delta    | State change    | Describes any change in state since previous trace, see separate table below                   |


** "Op" Column detail legend
| Value         | Meaning                                                                                      |
| STARTED       | Simulated node starting with empty log, term=0                                               |
| CMD START     | Simulated client requested that a node (usually leader, but not for all tests) run a command |
| CMD DONE      | The previous requested command is finished, whether complete, rejected, failed, whatever     |
| CRASH         | Simulating node has simulated a crash                                                        |
| RESTART       | Previously crashed node has restarted. Look at delta column to see effects on log, if any    |
| NEW ROLE      | The node has changed Raft role since last trace line                                         |
| NETSPLIT      | The node has been partitioned away from the majority network                                 |
| NETJOIN       | The node has rejoined the majority network                                                   |
| ae->N-X       | Node has sent append_entries message to N-X, next line in this table explains                |
| (continued)   | t=1 means current term is 1, i=1 means prevLogIndex=1, lt=1 means prevLogTerm=1              |
| (continued)   | c=1 means sender's commitIndex is 1,                                                         |
| (continued)   | e=2 means that the entries list in the message is 2 items long. eXo=0 is a heartbeat         |
| N-X->ae_reply | Node has received the response to an append_entries message, details in continued lines      |
| (continued)   | ok=(True or False) means that entries were saved or not, mi=3 says log max index = 3         |
| do_vote->N-X  | Node has sent request_vote to N-X, t=1 means current term is 1 (continued next line)         |
| (continued)   | li=0 means prevLogIndex = 0, lt=0 means prevLogTerm = 0                                      |
| N-X->vote     | Node has received request_vote response from N-X, yes=(True or False) indicates vote value   |

** "Delta" Column detail legend
Any item in this column indicates that the value of that item has changed since the last trace line

| Item | Meaning                                                                                                                         |
| t=X  | Term has changed to X                                                                                                           |
| lt=X | prevLogTerm has changed to X, indicating a log record has been stored                                                           |
| li=X | prevLogIndex has changed to X, indicating a log record has been stored                                                          |
| ci=X | Indicates commitIndex has changed to X, meaning log record has been committed, and possibly applied depending on type of record |
| n=X  | Indicates a change in networks status, X=1 means re-joined majority network, X=2 means partitioned to minority network          |

** Notes about interpreting traces
The way in which the traces are collected can occasionally obscure what is going on. A case in point is the commit of records at followers.
The commit process is triggered by an append_entries message arriving at the follower with a commitIndex value that exceeds the local
commit index, and that matches a record in the local log. This starts the commit process AFTER the response message is sent. You might
be expecting it to be prior to sending the response, in bound, as is often said. Whether this is expected behavior is not called out
as an element of the Raft protocol. It is certainly not required, however, as the follower doesn't report the commit index back to the
leader.

The definition of the commit state for a record is that a majority of nodes (leader and followers) have saved the record. Once
the leader detects this it applies and commits the record. At some point it will send another append_entries to the followers and they
will apply and commit. Or, if the leader dies before doing this, the next leader will commit by implication when it sends a term start
log record.

So when you are looking at the traces, you should not expect to see the commit index increas at a follower until some other message
traffic occurs, because the tracing function only checks the commit index at message transmission boundaries.






