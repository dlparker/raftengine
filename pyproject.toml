#[build-system]
#requires = ["setuptools>=45", "wheel"]
#build-backend = "setuptools.build_meta"

[project]
name = "raftengine"
version = "0.9.0"
description = "A Python implementation of the Raft consensus algorithm for distributed systems"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [{name = "Dennis Parker", email = "denns@windhavengroup.com"}]
keywords = ["raft", "consensus", "distributed", "systems", "replication"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Networking"
]
dependencies = [
    # No external dependencies - uses only Python standard library
]

[project.urls]
Homepage = "https://github.com/dlparker/raftengine"
Documentation = "https://github.com/dlparker/raftengine/blob/main/README.md"
Repository = "https://github.com/dlparker/raftengine"
Issues = "https://github.com/dlparker/raftengine/issues"

[project.optional-dependencies]
min = ["raftengine"]  # No extra deps; SqliteLog/Astream use stdlib
lmdb = ["lmdb>=1.7.3"]  # For LmdbLog, HybridLog
aiozmq = ["aiozmq>=1.0.0"]  # For Aiozmq RPC
grpc = ["grpcio>=1.50.0"]  # For Grpc RPC
bi_min = ["raftengine"]  # Counters, SqliteLog, Astream (stdlib)
bi_lmdb = ["lmdb>=1.7.3"]  # Counters + lmdb logs
bi_lmdb_aiozmq = ["lmdb>=1.7.3", "aiozmq>=1.0.0"]  # Counters + lmdb + aiozmq
bi_lmdb_grpc = ["lmdb>=1.7.3", "grpcio>=1.50.0"]  # Counters + lmdb + grpc

[build-system]
requires = ["pdm-backend"]  # Or hatchling/setuptools
build-backend = "pdm.backend"
#- **Notes**:
#  - `min` and `bi_min` have no deps since SqliteLog/Astream use stdlib.
#  - `lmdb` covers LmdbLog/HybridLog (assuming HybridLog uses lmdb).
#  - `bi_*` extras include counters; no extra deps for `bi_min` since counters is stdlib-based (per your examples).
#  - Use PDM for dev (editable install, testing); `pdm-backend` for building.


[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "pytest>=8.4",
    "pytest-asyncio>=0.25",
    "pytest-cov>=6.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinxcontrib-plantuml>=0.30",
    "graphviz>=0.20.3",
    "sphinx-autodoc2>=0.5.0",
    "sphinx-autoapi==3.6.0",
    "pillow==11.2.1",
    "sphinx_collapse==0.1.3"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["raftengine*"]
exclude = ["tests*", "extras_tests*", "examples*", "dev_tools*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--asyncio-mode=auto",
    "--cov=raftengine",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80"
]
markers = [
    "asyncio: marks tests as async",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["raftengine"]
omit = [
    "tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "demos/*",
    "dev_tools/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | demos
  | dev_tools
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true