@startuml
skinparam legend {
  backgroundColor #GhostWhite
  entrySeparator #GhostWhite
}

participant "Application\nServer Core" as app_core order 30 #Lightyellow
participant "State Machine" as app_state order 20 #Lightyellow 
database "Application\nStorage" as app_db order 10 #Lightyellow
participant Pilot as pilot order 40 #Lightblue
participant Deck as deck order 50 #Coral
database "Raft Log" as log order 60 #Coral
participant "Follower Role" as role order 70 #Lightgreen
app_core->deck: Start snapshot creation
deck->role: Stop accepting raft messages, freezes log
deck->log: Get last APPLIED index and term
deck->pilot: Start take_snapshot (with index and term)
create participant "SnapShotTool" as tool order 35 #Lightblue
pilot->tool: Create 
pilot->deck: Return snapshot tool
deck->tool: Start take_snapshot
tool->app_state: take_snapshot
app_state->app_db: Save snapshot chunk
app_state->app_db: Save snapshot chunk
app_state->app_db: Save snapshot chunk
app_state->app_db: Save snapshot chunk
app_state->pilot: Return snapshot_record
pilot->deck: Return snapshot_record
deck->log: Install snapshot, delete covered log records
deck->role: Resume Raft ops
deck->app_core: Return completed snapshot

legend 
  <#GhostWhite,#GhostWhite>|        |= __Legend__ |
  |<#Lightyellow>   | Defined and implemented by user|
  |<#Lightblue>  | Defined by Raft Engine, implemented by user|
  |<#Coral>  | Defined and implemment by Raft Engine|
  |<#Lightgreen> | Internal Raft Engine component|
endlegend
@enduml
