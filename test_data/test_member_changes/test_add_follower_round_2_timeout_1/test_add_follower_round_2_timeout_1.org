* Test test_add_follower_round_2_timeout_1 from file tests/test_member_changes.py


    This is a complicated one. It tests that the leader will timeout while trying to load
    a new node's log prior to adding it to the cluster. Specifically, that it will timeout
    when one election_timeout_max period has passed since the beginning of a loading round
    that is not the first round.

    First an normal election is run with three nodes. Next the node a loaded with a few log
    records, but we cheat and do it directly rather than running the commands for real. This
    reduces the logger output to help with debugging, and it reduces the tracing output.
    Not really necessisary, but nice.

    Next, a new test server is created but not started yet. It has an event handler registered
    for membership change events. The new server gets a call to the start_and_join method of the hull,
    which starts the process of adding the server to the cluster. It sends a message to the leader
    asking to be added, then the leader starts loading it with log records prior to starting the actual
    add.

    We set up pause triggers to capture the moment when the leader sends the append entries message
    that contains the last log entry and pause the leader there, allow the new node to process
    it but not yet send the response.

    If the response message was allowed to proceed, this would be the moment that
    the cluster_ops code would recognized both that the first round of loading is complete, and that
    there are no new log records to send. We want it instead to see new log records and start
    a second round of loading.

    So at this point we use our trick of loading new log records into the log directly. Just one record,
    loaded at nodes 1, 2 and 3.

    Now we disable the network on the new node so that it will not receive the next append entries.

    We let the paused pending entries response proceed, so that the cluster_ops code starts a new
    round of loading and starts a timeout function that will detect if the round takes longer than
    election_timeout_max to complete. Since we are not allowing the new node to receive messages,
    this timeout will fire and cause the add node abort sequence to run.

    The leader will reset all the internal state that it maintains for loading a node before
    add to the cluster, and it will send a response to the original memebership change message
    indicating that it failed.

    When node 4 receives this message, it will call our callback and issue our expected event,
    in both cases indicating failure, which we check.

    At this point everyone has forgotten that the add has been attempted, so another attempt
    is possbile.

    So, we call stop on the new node, call the start_and_join method again and enable the network.
    The leader should start a new loading operation, which should succeed, then notify all the
    followers (not the new node) that they should add the new node, then once it gets commit
    concurrence it will complete the add operation and send a membership change response to node 4
    which will trigger our callback and event handler.

    As a result of the add completion, the leader will update its commit index and the other
    servers need to know about it in order to send make the membership change permanent. So
    we trigger it to send a heartbeat, and then check all the followers to ensure the
    cluster state is correct..

    Simple!
    
    


 *[[condensed Trace Table Legend][Table legend]] located after last table in file*

** Starting election at node 1 of 3
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                         | N-1       | N-2   | N-2                         | N-2       | N-3   | N-3                         | N-3       | N-4  | N-4 | N-4   |
|  Role  | Op                          | Delta     | Role  | Op                          | Delta     | Role  | Op                          | Delta     | Role | Op  | Delta |
|  FLWR  | STARTED                     |           | FLWR  | STARTED                     |           | FLWR  | STARTED                     |           |
|  CNDI  | NEW ROLE                    | t-1       | FLWR  |                             |           | FLWR  |                             |           |
|  CNDI  | poll+N-2 t-1 li-0 lt-1      |           | FLWR  |                             |           | FLWR  |                             |           |
|  CNDI  | poll+N-3 t-1 li-0 lt-1      |           | FLWR  |                             |           | FLWR  |                             |           |
|  CNDI  |                             |           | FLWR  | N-1+poll t-1 li-0 lt-1      | t-1       | FLWR  |                             |           |
|  CNDI  |                             |           | FLWR  | vote+N-1 yes-True           |           | FLWR  |                             |           |
|  CNDI  |                             |           | FLWR  |                             |           | FLWR  | N-1+poll t-1 li-0 lt-1      | t-1       |
|  CNDI  |                             |           | FLWR  |                             |           | FLWR  | vote+N-1 yes-True           |           |
|  LEAD  | N-2+vote yes-True           | lt-1 li-1 | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  | NEW ROLE                    |           | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  | ae+N-2 t-1 i-0 lt-0 e-1 c-0 |           | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  | ae+N-3 t-1 i-0 lt-0 e-1 c-0 |           | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  | N-3+vote yes-True           |           | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  |                             |           | FLWR  | N-1+ae t-1 i-0 lt-0 e-1 c-0 | lt-1 li-1 | FLWR  |                             |           |
|  LEAD  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-1   |           | FLWR  |                             |           |
|  LEAD  |                             |           | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-0 lt-0 e-1 c-0 | lt-1 li-1 |
|  LEAD  |                             |           | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-1   |           |
|  LEAD  | N-2+ae_reply ok-True mi-1   | ci-1      | FLWR  |                             |           | FLWR  |                             |           |
|  LEAD  | N-3+ae_reply ok-True mi-1   |           | FLWR  |                             |           | FLWR  |                             |           |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
** Node 4 created, telling it to start_and_join, waiting for append entries sequences
---------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                         | N-1   | N-2   | N-2 | N-2   | N-3   | N-3 | N-3   | N-4   | N-4                         | N-4            |
|  Role  | Op                          | Delta | Role  | Op  | Delta | Role  | Op  | Delta | Role  | Op                          | Delta          |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | m_c+N-1 op-ADD n-mcpy://4   |                |
|  LEAD  | N-4+m_c op-ADD n-mcpy://4   |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  | ae+N-4 t-1 i-7 lt-1 e-0 c-7 |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | N-1+ae t-1 i-7 lt-1 e-0 c-7 | t-1            |
|  LEAD  | N-4+ae_reply ok-False mi-0  |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  | ae+N-4 t-1 i-0 lt-0 e-1 c-7 |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | N-1+ae t-1 i-0 lt-0 e-1 c-7 | lt-1 li-1 ci-1 |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | ae_reply+N-1 ok-True mi-1   |                |
|  LEAD  | N-4+ae_reply ok-True mi-1   |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  | ae+N-4 t-1 i-1 lt-1 e-6 c-7 |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                             |                |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | N-1+ae t-1 i-1 lt-1 e-6 c-7 | li-7 ci-7      |
|  LEAD  |                             |       | FLWR  |     |       | FLWR  |     |       | FLWR  | ae_reply+N-1 ok-True mi-7   |                |
---------------------------------------------------------------------------------------------------------------------------------------------------
** Blocking comms at node 4, running network ops and Waiting for leader to timeout and notify node 4
------------------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                                  | N-1   | N-2   | N-2 | N-2   | N-3   | N-3 | N-3   | N-4   | N-4                                  | N-4   |
|  Role  | Op                                   | Delta | Role  | Op  | Delta | Role  | Op  | Delta | Role  | Op                                   | Delta |
|  LEAD  | N-4+ae_reply ok-True mi-7            |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                                      |       |
|  LEAD  | ae+N-4 t-1 i-7 lt-1 e-1 c-8          |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                                      |       |
|  LEAD  | m_cr+N-4 op-ADD n-mcpy://4 ok-False  |       | FLWR  |     |       | FLWR  |     |       | FLWR  |                                      |       |
|  LEAD  |                                      |       | FLWR  |     |       | FLWR  |     |       | FLWR  | N-1+m_cr op-ADD n-mcpy://4 ok-False  |       |
------------------------------------------------------------------------------------------------------------------------------------------------------------
** Node 4 callback and handler results correct and cluster node list state correct, restarting add with all normal
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|  N-1   | N-1                                 | N-1   | N-2   | N-2                         | N-2       | N-3   | N-3                         | N-3       | N-4   | N-4                                 | N-4       |
|  Role  | Op                                  | Delta | Role  | Op                          | Delta     | Role  | Op                          | Delta     | Role  | Op                                  | Delta     |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | m_c+N-1 op-ADD n-mcpy://4           |           |
|  LEAD  | N-4+m_c op-ADD n-mcpy://4           |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-4 t-1 i-8 lt-1 e-0 c-8         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-8 lt-1 e-0 c-8         |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-False mi-7          |           |
|  LEAD  | N-4+ae_reply ok-False mi-7          |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-4 t-1 i-7 lt-1 e-1 c-8         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-7 lt-1 e-1 c-8         | li-8 ci-8 |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-8           |           |
|  LEAD  | N-4+ae_reply ok-True mi-8           | li-9  | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | m_cr+N-4 op-ADD n-mcpy://4 ok-True  |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | N-1+m_cr op-ADD n-mcpy://4 ok-True  |           |
|  LEAD  | ae+N-4 t-1 i-8 lt-1 e-1 c-8         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-8 lt-1 e-1 c-8         | li-9      |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-9           |           |
|  LEAD  | N-4+ae_reply ok-True mi-9           | ci-9  | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-2 t-1 i-9 lt-1 e-0 c-9         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  | N-1+ae t-1 i-9 lt-1 e-0 c-9 |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  | ae_reply+N-1 ok-False mi-8  |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | N-2+ae_reply ok-False mi-8          |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-3 t-1 i-9 lt-1 e-0 c-9         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-9 lt-1 e-0 c-9 |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-False mi-8  |           | FLWR  |                                     |           |
|  LEAD  | N-3+ae_reply ok-False mi-8          |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-4 t-1 i-9 lt-1 e-0 c-9         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-9 lt-1 e-0 c-9         | ci-9      |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-9           |           |
|  LEAD  | N-4+ae_reply ok-True mi-9           |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-2 t-1 i-8 lt-1 e-1 c-9         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  | N-1+ae t-1 i-8 lt-1 e-1 c-9 | li-9 ci-9 | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  | ae_reply+N-1 ok-True mi-9   |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | N-2+ae_reply ok-True mi-9           |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  | ae+N-3 t-1 i-8 lt-1 e-1 c-9         |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  | N-1+ae t-1 i-8 lt-1 e-1 c-9 | li-9 ci-9 | FLWR  |                                     |           |
|  LEAD  |                                     |       | FLWR  |                             |           | FLWR  | ae_reply+N-1 ok-True mi-9   |           | FLWR  |                                     |           |
|  LEAD  |                                     | FLWR  |       |                             | FLWR      |       |                             | FLWR      |       |                                     |
|  LEAD  | N-3+ae_reply ok-True mi-9           |       | FLWR  |                             |           | FLWR  |                             |           | FLWR  |                                     |           |
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


* Condensed Trace Table Legend
All the items in these legends labeled N-X are placeholders for actual node id values,
actual values will be N-1, N-2, N-3, etc. up to the number of nodes in the cluster. Yes, One based, not zero.

| Column Label | Description  | Details                                                                      |
| N-X Role     | Raft Role    | FLWR is Follower CNDI is Candidate LEAD is Leader                            |
| N-X Op       | Activity     | Describes a traceable event at this node, see separate table below           |
| N-X Delta    | State change | Describes any change in state since previous trace, see separate table below |


** "Op" Column detail legend
| Value        | Meaning                                                                                      |
| STARTED      | Simulated node starting with empty log, term is 0                                            |
| CMD START    | Simulated client requested that a node (usually leader, but not for all tests) run a command |
| CMD DONE     | The previous requested command is finished, whether complete, rejected, failed, whatever     |
| CRASH        | Simulating node has simulated a crash                                                        |
| RESTART      | Previously crashed node has restarted. Look at delta column to see effects on log, if any    |
| NEW ROLE     | The node has changed Raft role since last trace line                                         |
| NETSPLIT     | The node has been partitioned away from the majority network                                 |
| NETJOIN      | The node has rejoined the majority network                                                   |
| ae-N-X       | Node has sent append_entries message to N-X, next line in this table explains                |
| (continued)  | t-1 means current term is 1, i-1 means prevLogIndex is 1, lt-1 means prevLogTerm is 1        |
| (continued)  | c-1 means sender's commitIndex is 1,                                                         |
| (continued)  | e-2 means that the entries list in the message is 2 items long. eXo-0 is a heartbeat         |
| N-X-ae_reply | Node has received the response to an append_entries message, details in continued lines      |
| (continued)  | ok-(True or False) means that entries were saved or not, mi-3 says log max index is 3        |
| poll-N-X     | Node has sent request_vote to N-X, t-1 means current term is 1 (continued next line)         |
| (continued)  | li-0 means prevLogIndex is 0, lt-0 means prevLogTerm is 0                                    |
| N-X-vote     | Node has received request_vote response from N-X, yes-(True or False) indicates vote value   |
| p_v_r-N-X    | Node has sent pre_vote_request to N-X, t-1 means proposed term is 1 (continued next line)    |
| (continued)  | li-0 means prevLogIndex is 0, lt-0 means prevLogTerm is 0                                    |
| N-X-p_v      | Node has received pre_vote_response from N-X, yes-(True or False) indicates vote value       |
| m_c-N-X      | Node has sent memebership change to N-X op is add or remove and n is the node affected       |
| N-X-m_cr     | Node has received membership change response from N-X, ok indicates success value            |
| p_t-N-X      | Node has sent power transfer command N-X so node should assume power                         |
| N-X-p_tr     | Node has received power transfer response from N-X, ok indicates success value               |
| sn-N-X       | Node has sent snopshot copy command N-X so X node should apply it to local snapshot          |
| N-X>snr      | Node has received snapshot response from N-X, s indicates success value                      |

** "Delta" Column detail legend
Any item in this column indicates that the value of that item has changed since the last trace line

| Item | Meaning                                                                                                                         |
| t-X  | Term has changed to X                                                                                                           |
| lt-X | prevLogTerm has changed to X, indicating a log record has been stored                                                           |
| li-X | prevLogIndex has changed to X, indicating a log record has been stored                                                          |
| ci-X | Indicates commitIndex has changed to X, meaning log record has been committed, and possibly applied depending on type of record |
| n-X  | Indicates a change in networks status, X-1 means re-joined majority network, X-2 means partitioned to minority network          |

** Notes about interpreting traces
The way in which the traces are collected can occasionally obscure what is going on. A case in point is the commit of records at followers.
The commit process is triggered by an append_entries message arriving at the follower with a commitIndex value that exceeds the local
commit index, and that matches a record in the local log. This starts the commit process AFTER the response message is sent. You might
be expecting it to be prior to sending the response, in bound, as is often said. Whether this is expected behavior is not called out
as an element of the Raft protocol. It is certainly not required, however, as the follower doesn't report the commit index back to the
leader.

The definition of the commit state for a record is that a majority of nodes (leader and followers) have saved the record. Once
the leader detects this it applies and commits the record. At some point it will send another append_entries to the followers and they
will apply and commit. Or, if the leader dies before doing this, the next leader will commit by implication when it sends a term start
log record.

So when you are looking at the traces, you should not expect to see the commit index increas at a follower until some other message
traffic occurs, because the tracing function only checks the commit index at message transmission boundaries.






